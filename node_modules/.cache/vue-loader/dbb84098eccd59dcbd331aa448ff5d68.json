{"remainingRequest":"/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/NATALIA/Documents/UiG/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/NATALIA/Documents/UiG/src/components/Documents.vue?vue&type=template&id=33c82eb8&","dependencies":[{"path":"/Users/NATALIA/Documents/UiG/src/components/Documents.vue","mtime":1591578984197},{"path":"/Users/NATALIA/Documents/UiG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50cyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1haW4tY29udGFpbmVyIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgICAgX3ZtLl92KCJEb2N1bWVudHMiKSwKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBuYW1lOiAiZG9jdW1lbnRzIiB9IH0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmaWx0ZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmlsdGVyLWNvbnRhaW5lciIgfSwgWwogICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJmaWx0ZXItdGl0bGUiIH0sIFtfdm0uX3YoIkFsbCIpXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmaWx0ZXItY29udGFpbmVyIiB9LCBbCiAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImZpbHRlci10aXRsZSIgfSwgW192bS5fdigiTWFya2V0aW5nIildKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpbHRlci1jb250YWluZXIiIH0sIFsKICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiZmlsdGVyLXRpdGxlIiB9LCBbX3ZtLl92KCJEZXZlbG9wbWVudCIpXSkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudHMtY29udGFpbmVyIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZS1kb2N1bWVudCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJQcm9qZWN0IGNoYXB0ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIiBUaGUgZG9jdW1lbnQgcHJvdmlkZXMgYSBnZW5lcmFsIHByb2plY3Qgb3ZlcnZpZXcsIGl0J3MgbWlzc2lvbiBhbmQgZGV2ZWxvcG1lbnQgZGlyZWN0aW9uICIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib25lLWRvY3VtZW50IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlByb2plY3QgY2hhcHRlciIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRleHQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiIFRoZSBkb2N1bWVudCBwcm92aWRlcyBhIGdlbmVyYWwgcHJvamVjdCBvdmVydmlldywgaXQncyBtaXNzaW9uIGFuZCBkZXZlbG9wbWVudCBkaXJlY3Rpb24gIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvbmUtZG9jdW1lbnQiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10aXRsZSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiUHJvamVjdCBjaGFwdGVyIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGV4dCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICIgVGhlIGRvY3VtZW50IHByb3ZpZGVzIGEgZ2VuZXJhbCBwcm9qZWN0IG92ZXJ2aWV3LCBpdCdzIG1pc3Npb24gYW5kIGRldmVsb3BtZW50IGRpcmVjdGlvbiAiCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZS1kb2N1bWVudCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJQcm9qZWN0IGNoYXB0ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIiBUaGUgZG9jdW1lbnQgcHJvdmlkZXMgYSBnZW5lcmFsIHByb2plY3Qgb3ZlcnZpZXcsIGl0J3MgbWlzc2lvbiBhbmQgZGV2ZWxvcG1lbnQgZGlyZWN0aW9uICIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib25lLWRvY3VtZW50IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlByb2plY3QgY2hhcHRlciIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRleHQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiIFRoZSBkb2N1bWVudCBwcm92aWRlcyBhIGdlbmVyYWwgcHJvamVjdCBvdmVydmlldywgaXQncyBtaXNzaW9uIGFuZCBkZXZlbG9wbWVudCBkaXJlY3Rpb24gIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvbmUtZG9jdW1lbnQiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10aXRsZSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiUHJvamVjdCBjaGFwdGVyIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGV4dCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICIgVGhlIGRvY3VtZW50IHByb3ZpZGVzIGEgZ2VuZXJhbCBwcm9qZWN0IG92ZXJ2aWV3LCBpdCdzIG1pc3Npb24gYW5kIGRldmVsb3BtZW50IGRpcmVjdGlvbiAiCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZS1kb2N1bWVudCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJQcm9qZWN0IGNoYXB0ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIiBUaGUgZG9jdW1lbnQgcHJvdmlkZXMgYSBnZW5lcmFsIHByb2plY3Qgb3ZlcnZpZXcsIGl0J3MgbWlzc2lvbiBhbmQgZGV2ZWxvcG1lbnQgZGlyZWN0aW9uICIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib25lLWRvY3VtZW50IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlByb2plY3QgY2hhcHRlciIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRleHQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiIFRoZSBkb2N1bWVudCBwcm92aWRlcyBhIGdlbmVyYWwgcHJvamVjdCBvdmVydmlldywgaXQncyBtaXNzaW9uIGFuZCBkZXZlbG9wbWVudCBkaXJlY3Rpb24gIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvbmUtZG9jdW1lbnQiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10aXRsZSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiUHJvamVjdCBjaGFwdGVyIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZG9jdW1lbnQtdGV4dCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICIgVGhlIGRvY3VtZW50IHByb3ZpZGVzIGEgZ2VuZXJhbCBwcm9qZWN0IG92ZXJ2aWV3LCBpdCdzIG1pc3Npb24gYW5kIGRldmVsb3BtZW50IGRpcmVjdGlvbiAiCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZS1kb2N1bWVudCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvY3VtZW50LXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJQcm9qZWN0IGNoYXB0ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkb2N1bWVudC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIiBUaGUgZG9jdW1lbnQgcHJvdmlkZXMgYSBnZW5lcmFsIHByb2plY3Qgb3ZlcnZpZXcsIGl0J3MgbWlzc2lvbiBhbmQgZGV2ZWxvcG1lbnQgZGlyZWN0aW9uICIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}