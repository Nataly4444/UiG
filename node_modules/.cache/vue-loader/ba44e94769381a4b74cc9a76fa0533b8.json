{"remainingRequest":"/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/NATALIA/Documents/UiG/src/components/Summary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/NATALIA/Documents/UiG/src/components/Summary.vue","mtime":1591706818821},{"path":"/Users/NATALIA/Documents/UiG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/NATALIA/Documents/UiG/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxwaGFwcm9ncmVzczogNDAsCiAgICAgIGFscGhhOiAxLjEsCiAgICAgIHRhc2s6IDQyLAogICAgICBwcm9ncmVzczogWwogICAgICAgIHsgaWQ6IDEsIGNvdW50OiAyOCwgaXNEb25lOiB0cnVlIH0sCiAgICAgICAgeyBpZDogMiwgY291bnQ6IDcsIGlkRG9uZTogZmFsc2UgfSwKICAgICAgXSwKICAgICAgY2lyY2xlOiAxMjAsCiAgICAgIGNpcmNsZVJlczogMTA3LAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaXJjbGVzKCkgewogICAgICByZXR1cm4gMTgwIC0gKHRoaXMuY2lyY2xlUmVzIC8gdGhpcy5jaXJjbGUpICogMTgwOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Summary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Summary.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"summary\">\n    <div class=\"main-container\">\n      <div class=\"title\">Project Dashboard <a name=\"summary\"></a></div>\n      <div class=\"graphics\">\n        <div class=\"double-graphic\">\n          <div class=\"graphic alpha\">\n            <div class=\"container-90\">\n              <div class=\"graphic-title\">Alpha {{ alpha }}</div>\n              <div class=\"progress\">\n                <div class=\"progress-bar\"\n                  :style=\"{\n                    background: '#18B573',\n                    width: `${alphaprogress}%`,\n                  }\">\n                  <div class=\"progress-name\">\n                     {{ alphaprogress }}%\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\n          </div>\n          <div class=\"core-task\">\n            <div class=\"container-90\">\n              <div class=\"graphic-title\">Core task: {{ task }}</div>\n              <div class=\"progress\">\n                <div\n                  class=\"progress-bar\"\n                  v-for=\"item in progress\"\n                  :key=\"item.id\"\n                  :style=\"{\n                    background: item.isDone ? '#18B573' : '#3282FA',\n                    width: `${(item.count / task) * 100}%`,\n                  }\"\n                >\n                  <div class=\"progress-name\">\n                    {{ item.count }}\n                    <span>{{ item.isDone ? \"done\" : \"in progress\" }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n         \n        </div>\n        <div class=\"graphic health\">\n          <div class=\"container-health\">\n             <div class=\"circle-wrap\">\n            <div class=\"circle\">\n              <div\n                class=\"circle__range\"\n                :style=\"{ transform: `rotate(-${circles}deg)` }\"\n              ></div>\n            </div>\n\n            <div class=\"circle-res\">\n              <img class=\"icon-health\" src=\"../assets/img/health.svg\" alt=\"\">\n              {{ circleRes }}%\n              <div class=\"speed\">2% â†‘</div>\n            </div>\n            <div class=\"circle-min\">0%</div>\n            <div class=\"circle-max\">{{ circle }}%</div>\n          </div>\n          <div class=\"health-text\">\n            <div class=\"health-text-title\">Project Health</div>\n            <div class=\"health-text-info\">Project health is an integrated metric based on team speed, work quality, and organization degree.</div>\n          </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      alphaprogress: 40,\n      alpha: 1.1,\n      task: 42,\n      progress: [\n        { id: 1, count: 28, isDone: true },\n        { id: 2, count: 7, idDone: false },\n      ],\n      circle: 120,\n      circleRes: 107,\n    };\n  },\n  computed: {\n    circles() {\n      return 180 - (this.circleRes / this.circle) * 180;\n    },\n  },\n};\n</script>\n\n<style>\n@import \"../assets/css/main.css\";\n@import \"../assets/css/summary.css\";\n</style>\n"]}]}